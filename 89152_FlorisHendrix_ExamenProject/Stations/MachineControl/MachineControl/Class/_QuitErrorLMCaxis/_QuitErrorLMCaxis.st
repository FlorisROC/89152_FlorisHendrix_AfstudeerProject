//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "_QuitErrorLMCaxis"
	Revision           = "1.0"
	GUID               = "{B72C4B6D-6584-4BD6-90C6-3BC508625C95}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(374,120)">
	<Channels>
		<Server Name="ClassSvr" GUID="{5F82A5A7-7CD6-4CA0-A365-02EDF455757B}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Client Name="LMCAXIS" Required="false" Internal="false"/>
	</Channels>
	<Dependencies>
		<Files>
			<File Path=".\Class\_QuitErrorLMCaxis\_QuitErrorLMCAxis_de.pdf"/>
			<File Path=".\Class\_QuitErrorLMCaxis\_QuitErrorLMCAxis_en.pdf"/>
		</Files>
	</Dependencies>
	<RevDoku>
		<Owner Company="Sigmatek" Author="roskri"/>
		<Dokumentation Revision="1.0" Date="2016-07-07" Author="roskri" Company="Sigmatek" Description="Class added for quitting error on _LMCAxis"/>
	</RevDoku>
</Class>
*)
_QuitErrorLMCaxis : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
  //Clients:
	LMCAXIS 	: CltChCmd__LMCAxis;
  //Variables:
		bClientConnected 	: BOOL;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION VIRTUAL GLOBAL ClassSvr::Write
		VAR_INPUT
			input (EAX) 	: DINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: DINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma usingLtd _LMCAxis


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB _QuitErrorLMCaxis::@CT_
0$UINT,
2#0100000000000000$UINT, //TY__QUITERRORLMCAXIS
1$UINT, 0$UINT, (SIZEOF(::_QuitErrorLMCaxis))$UINT, 
1$UINT, 1$UINT, 0$UINT, 
TO_UDINT(649212562), "_QuitErrorLMCaxis", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::_QuitErrorLMCaxis.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
//Clients:
(::_QuitErrorLMCaxis.LMCAXIS.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(546066186), "LMCAXIS", TO_UDINT(1422175863), "_LMCAxis", 1$UINT, 110$UINT, 
END_FUNCTION


#define USER_CNT__QuitErrorLMCaxis 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT__QuitErrorLMCaxis] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION _QuitErrorLMCaxis::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT__QuitErrorLMCaxis, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Write		:= #Write();
	vmt.CmdTable.Init		:= #Init();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL _QuitErrorLMCAxis::ClassSvr::Write
	VAR_INPUT
		input (EAX) 	: DINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: DINT;
	END_VAR

	ClassSvr := input;
	result := ClassSvr;
  
  if ClassSvr = 1 & bClientConnected then
    LMCAXIS.QuitError();
  end_if;
 

END_FUNCTION


FUNCTION VIRTUAL GLOBAL _QuitErrorLMCAxis::Init

  if _FirstScan then
    if IsClientConnected(#LMCAXIS) then
      bClientConnected := TRUE;
    end_if;
  end_if;

END_FUNCTION
